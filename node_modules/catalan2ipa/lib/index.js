"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _accents = _interopRequireDefault(require("./accents"));

var _helpers = require("./helpers");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

/**
 * This file is part of catalan2ipa, ©2015-2019 by the following contributors:
 * Vicenç Riullop (en.wiktionary.org user Vriullop)
 * en.wiktionary.org user Erutuon
 * en.wiktionary.org user JohnC5
 * en.wiktionary.org user IvanScrooge98
 * en.wiktionary.org user Rua
 * en.wiktionary.org user Connum
 *
 * catalan2ipa is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * catalan2ipa is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with catalan2ipa.  If not, see <https://www.gnu.org/licenses/>.
 */
var defaultOptions = {
  midVowelHint: null,
  syllableMarker: true,
  throwError: true
};

function translit(wordIn) {
  var optionsArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;
  var word = (0, _helpers.wordFixes)(wordIn.toLowerCase());
  var options = optionsArg;

  if (options !== defaultOptions) {
    options = _extends({}, defaultOptions, options);
  } else {
    options = _extends({}, defaultOptions);
  }

  var syllables = (0, _helpers.splitSyllables)(word);

  if (options.syllableMarker === true) {
    options.syllableMarker = '.';
  }

  if (options.midVowelHint === null) {
    if (/[éêòóô]/.test(syllables[syllables.stress - 1].vowel)) {
      var _syllables$vowel$matc = syllables[syllables.stress - 1].vowel.match(/[éêòóô]/, '');

      var _syllables$vowel$matc2 = _slicedToArray(_syllables$vowel$matc, 1);

      options.midVowelHint = _syllables$vowel$matc2[0];
    } else if (/[eè]/.test(syllables[syllables.stress - 1].vowel)) {
      options.midVowelHint = (0, _helpers.midVowelE)(syllables);
    } else if (syllables[syllables.stress - 1].vowel === 'o') {
      options.midVowelHint = (0, _helpers.midVowelO)(syllables);
    }
  }

  syllables = (0, _helpers.toIPA)(syllables, options);
  var returnValue = (0, _helpers.groupSortAndFormat)(_accents["default"], syllables, options);
  /* eslint-disable no-underscore-dangle */

  if (syllables._error) {
    returnValue._error = syllables._error;
  }
  /* eslint-enable no-underscore-dangle */


  return returnValue;
}

var _default = translit;
exports["default"] = _default;
module.exports = exports.default;